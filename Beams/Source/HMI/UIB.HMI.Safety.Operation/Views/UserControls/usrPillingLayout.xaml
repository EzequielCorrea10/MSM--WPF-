<UserControl x:Class="HSM.HMI.Safety.Operation.Views.usrPillingLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:jctr="clr-namespace:Janus.Rodeo.Windows.Library.UI.Controls;assembly=Janus.Rodeo.Windows.Library.UI.Controls"
             xmlns:jwidgets="clr-namespace:Janus.Rodeo.Windows.Library.UI.Controls.Widgets;assembly=Janus.Rodeo.Windows.Library.UI.Controls"
             xmlns:lctr="clr-namespace:HSM.Utility.Controls;assembly=HSM.Utility.Controls"
             xmlns:lenum="clr-namespace:HSM.Utility.Common.Enumerations;assembly=HSM.Utility.Common"
             xmlns:venum="clr-namespace:HSM.HMI.Safety.Operation.Enumerations"
             xmlns:converter="clr-namespace:HSM.HMI.Safety.Operation.Converters"
             xmlns:selector="clr-namespace:HSM.HMI.Safety.Operation.Selectors"
             xmlns:behaviour="clr-namespace:HSM.HMI.Safety.Operation.Behaviours"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:view="clr-namespace:HSM.HMI.Safety.Operation.Views"              
             BorderThickness="0" Height="720" >
    <UserControl.Resources>
        <converter:LayoutLeftMarginConverter x:Key="layoutLeftMarginConverter" />
        <converter:LayoutTopMarginConverter x:Key="layoutTopMarginConverter" />
        <converter:LayoutWidthConverter x:Key="layoutWidthConverter" />
        <converter:LayoutHeightConverter x:Key="layoutHeightConverter" />
        <converter:LayoutTopConverter x:Key="layoutTopConverter" />
        <converter:LayoutLeftConverter x:Key="layoutLeftConverter" />
        <selector:LayoutElementSelector x:Key="layoutElementSelector" />
        <converter:LayoutMachineYardConverter x:Key="layoutMachineYardConverter"/>
        <BitmapImage x:Key="img_GridLEFT" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Images/LeftArrowGrid.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="img_GridRIGHT" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Images/RightArrowGrid.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="img_Binocular" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/binocular.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="img_ZoomOut" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/ZoomOut.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="img_ZoomIn" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/ZoomIn.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="img_Show" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/Show.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="Img_Cardinals_1" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Images/cardinals_1.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="Img_Cardinals_2" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Images/cardinals_2.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="RightArrow" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/rightArrow.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="DownArrow" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/coilDrop.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="DownArrow2" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/camera.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <BitmapImage x:Key="Beam" UriSource="pack://application:,,,/HSM.Utility.Controls;component/Themes/Resources/Icons/Beam.png" RenderOptions.BitmapScalingMode="HighQuality" />
        <!-- Pixel  -->
        <sys:Double x:Key="LWidth">3000</sys:Double>
        <sys:Double x:Key="LHeight">665</sys:Double>

        <!-- Millimeters  -->
        <sys:Int32 x:Key="BridgeWidth">6500</sys:Int32>
        <!-- Pixel  -->
        <sys:Double x:Key="BridgeHeightYard">664</sys:Double>
        <sys:Double x:Key="BridgeHeightGeneral">221</sys:Double>
        <!-- Millimeters  -->
        <sys:Int32 x:Key="TrolleyHeight">2500</sys:Int32>
        <sys:Int32 x:Key="TrolleyWidth">4500</sys:Int32>
        <!-- Pixel  -->
        <sys:Int32 x:Key="TrolleyGeneralHeight">2000</sys:Int32>
        <sys:Int32 x:Key="TrolleyGeneralWidth">1800</sys:Int32>



        <sys:Int32 x:Key="ZeroValue">0</sys:Int32>
        <sys:Boolean x:Key="boolTrue">True</sys:Boolean>
        <sys:Boolean x:Key="boolFalse">False</sys:Boolean>


        <Style x:Key="Lststyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="Transparent" Padding="7" SnapsToDevicePixels="True">
                            <ContentPresenter />
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="btnArrow" TargetType="{x:Type ToggleButton}">
            <Border x:Name="btnArrow" Width="50" Height="30" BorderThickness="1,1,0.3,1" BorderBrush="Gray" Cursor="Hand">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#FF252525" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="1" Color="#FF252525" />
                    </LinearGradientBrush>
                </Border.Background>
                <Polygon Fill="White" Height="20" Points="10 10, 10 27, 13 22.3, 17 32, 19 32, 20 31, 16 21, 22 22" HorizontalAlignment="Center" Stretch="Uniform" Stroke="Black" StrokeThickness="0.5">
                    <Polygon.Effect>
                        <DropShadowEffect ShadowDepth = "3" Direction = "320" Color = "#BF373737" Opacity = "0.7" BlurRadius = "2" />
                    </Polygon.Effect>
                </Polygon>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="btnArrow">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" TargetName="btnArrow">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor" TargetName="btnArrow" Value="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="btnHand" TargetType="{x:Type ToggleButton}">
            <Border x:Name="brdHand" Width="50" Height="30" BorderThickness="1,1,1,1" BorderBrush="Gray" Cursor="Hand">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#FF252525" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="1" Color="#FF252525" />
                    </LinearGradientBrush>
                </Border.Background>
                <Label Foreground="White" FontSize="19" HorizontalAlignment="Center" Content="&#9995;">
                    <Label.Effect>
                        <DropShadowEffect ShadowDepth = "3" Direction = "320" Color = "#BF373737" Opacity = "0.7" BlurRadius = "2" />
                    </Label.Effect>
                </Label>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="brdHand">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" TargetName="brdHand">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor" TargetName="brdHand" Value="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="btnBinocular" TargetType="{x:Type Button}">
            <Border Name="brdBinocular" Width="50" Height="30" BorderThickness="0.3,1,1,1" BorderBrush="Gray" Cursor="Hand">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#FF252525" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="1" Color="#FF252525" />
                    </LinearGradientBrush>
                </Border.Background>
                <Image Source="{StaticResource DownArrow2}" Width="40" Height="30" RenderOptions.BitmapScalingMode="Fant" Margin="5,0,4,0" VerticalAlignment="Top">
                    <Image.Effect>
                        <DropShadowEffect ShadowDepth = "3" Direction = "320" Color = "Gray" Opacity = "0.7" BlurRadius = "2" />
                    </Image.Effect>
                </Image>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="brdBinocular">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="btnZoomOut" TargetType="{x:Type ToggleButton}">
            <Border Name="brdBinocular" Width="50" Height="30" BorderThickness="0.3,1,1,1" BorderBrush="Gray" Cursor="Hand">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#FF252525" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="1" Color="#FF252525" />
                    </LinearGradientBrush>
                </Border.Background>
                <Image Source="{StaticResource img_ZoomOut}" Width="40" Height="30" RenderOptions.BitmapScalingMode="Fant">
                    <Image.Effect>
                        <DropShadowEffect ShadowDepth = "3" Direction = "320" Color = "#BF373737" Opacity = "0.7" BlurRadius = "2" />
                    </Image.Effect>
                </Image>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="brdBinocular">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--<Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" TargetName="brdBinocular">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor" TargetName="brdBinocular" Value="Arrow"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="btnZoomIn" TargetType="{x:Type ToggleButton}">
            <Border Name="brdBinocular" Width="50" Height="30" BorderThickness="0.3,1,1,1" BorderBrush="Gray" Cursor="Hand">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#FF252525" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="0.5" Color="#FF686868" />
                        <GradientStop Offset="1" Color="#FF252525" />
                    </LinearGradientBrush>
                </Border.Background>
                <Image Source="{StaticResource img_ZoomIn}" Width="40" Height="30" RenderOptions.BitmapScalingMode="Fant">
                    <Image.Effect>
                        <DropShadowEffect ShadowDepth = "3" Direction = "320" Color = "#BF373737" Opacity = "0.7" BlurRadius = "2" />
                    </Image.Effect>
                </Image>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="brdBinocular">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--<Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" TargetName="brdBinocular">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FF686868" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="0.5" Color="#FF9B9B9B" />
                                <GradientStop Offset="1" Color="#FF686868" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor" TargetName="brdBinocular" Value="Arrow"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="btnTOLink" TargetType="{x:Type Button}">
            <Setter Property="Command" Value="{Binding Path=TODetailsCommand}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Label Foreground="{Binding Path=Machine.BackgroundColor}" FontWeight="Bold"
                               VerticalContentAlignment="Center" HorizontalContentAlignment="Right">
                            <Label.Style>
                                <Style TargetType="Label" BasedOn="{StaticResource TransOptionLabel}">
                                    <Setter Property="Height" Value="70" />
                                    <Setter Property="Width" Value="70" />
                                    <Setter Property="Margin" Value="-410,-115,-150, 300"/>
                                    <Setter Property="FontSize" Value="20" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=DataContext.GeneralLayout , Mode=OneWay, UpdateSourceTrigger=PropertyChanged , RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="True">
                                            <Setter Property="Height" Value="50" />
                                            <Setter Property="Width" Value="50" />
                                            <Setter Property="Margin" Value="-231,-410,30,-150"/>
                                            <Setter Property="FontSize" Value="16" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="-90" CenterY="20" CenterX="150"/>
                                </TransformGroup>
                            </Label.RenderTransform>
                            <Label.Template>
                                <ControlTemplate TargetType="Label">
                                    <TextBlock TextDecorations="Underline" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Right"
                                               Text="{Binding Path=TransportOrder.TOReference, StringFormat={} TO: {0}}" />
                                </ControlTemplate>
                            </Label.Template>
                        </Label>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="btnTOLinkHorizontal" TargetType="{x:Type Button}">
            <Setter Property="Command" Value="{Binding Path=TODetailsCommand}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Label Style="{StaticResource TransOptionLabel}" 
                               Foreground="Black" FontWeight="Bold"
                               VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                            <Label.Template>
                                <ControlTemplate TargetType="Label">
                                    <TextBlock TextDecorations="Underline" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Text="TO"/>

                                </ControlTemplate>
                            </Label.Template>
                        </Label>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="btnCheck" TargetType="ToggleButton">
            <Setter Property="FontFamily" Value="Metro UI" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="#342814" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="grdContent">
                            <Grid.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Grid.Background>
                            <Border Opacity="0.5" x:Name="Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}" />
                            <Border Opacity="1" x:Name="BorderTickness" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" BorderBrush="WhiteSmoke" CornerRadius="5" BorderThickness="2" Background="Transparent" />
                            <ContentPresenter VerticalAlignment="Center" TextBlock.Foreground="WhiteSmoke" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="Bold" HorizontalAlignment="Center" x:Name="contentPresenter" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" TargetName="Border" Value="0.2"/>
                                <Setter Property="Opacity" TargetName="BorderTickness" Value="0.2"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" TargetName="Border" Value="1"/>
                                <Setter Property="Opacity" TargetName="BorderTickness" Value="1"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="btnSelected" TargetType="Button">
            <Setter Property="FontFamily" Value="Metro UI" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="#FF12311F" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Opacity" Value="1" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Enabled, Mode=OneWay}" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="grdContent">
                                    <Grid.Background>
                                        <SolidColorBrush Color="Transparent" />
                                    </Grid.Background>
                                    <Border Opacity="0.5"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}" />
                                    <Border Opacity="0.2"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" BorderBrush="WhiteSmoke" CornerRadius="5" BorderThickness="2" Background="Transparent" />
                                    <ContentPresenter VerticalAlignment="Center" TextBlock.Foreground="WhiteSmoke" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="Bold" HorizontalAlignment="Center" x:Name="contentPresenter" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=Enabled, Mode=OneWay}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="grdContent">
                                    <Grid.Background>
                                        <SolidColorBrush Color="Transparent" />
                                    </Grid.Background>
                                    <Border Opacity="1" x:Name="Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}" />
                                    <Border Opacity="1" x:Name="BorderTickness" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="1,0,-1,0" BorderBrush="WhiteSmoke" CornerRadius="5" BorderThickness="2" Background="Transparent" />
                                    <ContentPresenter VerticalAlignment="Center" TextBlock.Foreground="WhiteSmoke" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="Bold" HorizontalAlignment="Center" x:Name="contentPresenter" />

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

            </Style.Triggers>

        </Style>

    </UserControl.Resources>
    <DockPanel LastChildFill="False" HorizontalAlignment="Center">
        <Grid DockPanel.Dock="Top">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
            </StackPanel>

            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,120,0">
                <Button x:Name="btnBinocular" Margin="0" Template="{StaticResource btnBinocular}" Click="btnZoom_Click"  ToolTip="Allow the user to make zoom on the layout"/>
            </StackPanel>-->


        </Grid>

        <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="0,0,0,0">

            <ScrollViewer Name="scrollXY" Width="1520" Height="720" Margin="5,2,5,2" Padding="0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                          behaviour:TouchScrolling.IsEnabled="False"
                          behaviour:TouchZoom.IsEnabled="False"
                          behaviour:TouchDrawing.IsEnabled="False"
                          behaviour:TouchDrawing.LayoutWidth="{StaticResource LWidth}"
                          behaviour:TouchDrawing.LayoutHeight="{StaticResource LHeight}"
                          behaviour:TouchDrawing.LayoutGeneralWidth="{StaticResource LWidth}"
                          behaviour:TouchDrawing.LayoutGeneralHeight="{StaticResource LHeight}"
                          behaviour:TouchDrawing.LayoutGeneral="{Binding Path=GeneralLayout}">
                <ScrollViewer.Style>
                    <Style TargetType="ScrollViewer" >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsInverted, Mode=OneTime}" Value="True">
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ScrollViewer.Style>

                <Grid Style="{StaticResource grdBackground}" Margin="0">

                    <Grid>


                        <!-- Fondo principal con gradiente -->
                        <Rectangle Margin="79,21,77,578" x:Name="BedEntry">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.00 0.0">
                                    <GradientStop Offset="0.5" Color="Black"/>
                                    <GradientStop Offset="0.5" Color="DimGray"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Rectangle Margin="80,142,78,391" x:Name="BedEntry2">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.00 0.00">
                                    <GradientStop Offset="0.5" Color="Black"/>
                                    <GradientStop Offset="0.5" Color="#222222"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ItemsControl ItemsSource="{Binding BeamsBedEntry, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="3" Margin="0,0,192,0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <!-- Representación visual de cada Beam como botón con imagen -->
                                    <Button  Command="{Binding Path=DataContext.FooCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"   Width="600" Height="35" Background="Transparent">
                                        <Grid>
                                            <!-- Imagen de fondo -->
                                            <Image Source="{StaticResource Beam}" Width="600" Height="125"/>
                                            <!-- Texto centrado sobre la imagen -->
                                            <Label Content="{Binding Name}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center" 
                                                   Foreground="White"   
                                                   FontSize="20" 
                                                   Margin="150,3,0,0"/>
                                        </Grid>
                                        <!-- Posicionamiento dentro del Canvas -->
                                        <Button.RenderTransform>
                                            <TranslateTransform X="{Binding PositionX}" Y="{Binding PositionY}" />
                                        </Button.RenderTransform>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- Imágenes de flechas -->

                        <!-- Collecting BedEntry -->
                        <Border x:Name="West" BorderThickness="2"  Margin="81,21,1119,578">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedW1}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" FontSize="15" Height="50" Margin="187,23,0,647" ><Run Text="Piling Bed 1 W"/><LineBreak/><Run/></TextBlock>

                        <!-- Collecting WestEntry -->
                        <Border x:Name="East" BorderThickness="2,2"  Margin="1123,21,77,578" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="-0.281"/>
                                    <RotateTransform/>
                                    <TranslateTransform X="-0.246"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedE1}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 1 E" FontSize="15" Height="50" Margin="1238,23,0,647" RenderTransformOrigin="0.5,0.75" />
                        <Border x:Name="PilingBedE2" BorderThickness="2,2"   Margin="1123,143,77,457" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="-0.247"/>
                                    <RotateTransform/>
                                    <TranslateTransform X="-0.246"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedE2}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 2 E" FontSize="15" Margin="1238,145,0,550" />

                        <Border x:Name="PilingBedW2" BorderThickness="2" Margin="81,143,1119,457">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedW2}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 2 W" FontSize="15" Margin="187,145,0,537" />

                    </Grid>

                    <Grid Margin="0,-4,0,4">
                        <Rectangle Margin="78,298,77,216" x:Name="PrePiling" IsHitTestVisible="False">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.00 0.00">
                                    <GradientStop Offset="0.5" Color="Black"/>
                                    <GradientStop Offset="0.5" Color="#222222"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas>
                            <ItemsControl ItemsSource="{Binding PrePilingBeams, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!-- Representación visual de cada Beam como botón con imagen -->
                                        <Button  Command="{Binding Path=DataContext.FooCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"   Width="600" Height="35" Background="Transparent">
                                            <Grid>
                                                <!-- Imagen de fondo -->
                                                <Image Source="{StaticResource Beam}" Width="600" Height="125"/>
                                                <!-- Texto centrado sobre la imagen -->
                                                <Label Content="{Binding Name}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center" 
                                                   Foreground="White"   
                                                   FontSize="20" 
                                                   Margin="150,3,0,0"/>
                                            </Grid>
                                            <!-- Posicionamiento dentro del Canvas -->
                                            <Button.RenderTransform>
                                                <TranslateTransform X="{Binding PositionX}" Y="{Binding PositionY}" />
                                            </Button.RenderTransform>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Canvas>
                        <Border x:Name="PilingBedE4" BorderThickness="2,2"  Margin="1123,335,77,319">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedE4}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 4 E" FontSize="15" Margin="1232,337,0,351" />

                        <Border x:Name="PilingBedE3" BorderThickness="2,2"   Margin="1123,268,77,386">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedE3}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 3 E" FontSize="15" Margin="1232,270,0,426" />


                        <Border x:Name="PilingBedW4" BorderThickness="2,2"   Margin="81,335,1119,319">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedW4}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 4 W" FontSize="15" Margin="191,337,0,357" />

                        <Border x:Name="PilingBedW3" BorderThickness="2,2"  Margin="81,268,1119,386">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingBedW3}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 3 W" FontSize="15" Margin="191,271,0,427" />

                    </Grid>
                    <Grid>
                        <Rectangle Margin="78,468,78,122" x:Name="Piling">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.00 0.00">
                                    <GradientStop Offset="0.5" Color="Black"/>
                                    <GradientStop Offset="0.5" Color="#222222"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas>
                            <ItemsControl ItemsSource="{Binding PilingBeams, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!-- Representación visual de cada Beam como botón con imagen -->
                                        <Button  Command="{Binding Path=DataContext.FooCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"   Width="600" Height="35" Background="Transparent">
                                            <Grid>
                                                <!-- Imagen de fondo -->
                                                <Image Source="{StaticResource Beam}" Width="600" Height="125"/>
                                                <!-- Texto centrado sobre la imagen -->
                                            </Grid>
                                            <!-- Posicionamiento dentro del Canvas -->
                                            <Button.RenderTransform>
                                                <TranslateTransform X="{Binding PositionX}" Y="{Binding PositionY}" />
                                            </Button.RenderTransform>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Canvas>
                        <!--<Image Height="50" Width="50" Source="{StaticResource DownArrow}" Margin="1268,324,202,295" Opacity="0.5"/>-->


                        <Border x:Name="PilingQueueE" BorderThickness="2,2"  Margin="1123,398,77,256">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingPreQueueE}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" FontSize="15" Margin="1222,400,0,291" ><Run Text="Piling Pre Queue E"/></TextBlock>

                        <Border x:Name="NextToConfirmE" BorderThickness="2,2" Margin="1123,465,77,189">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInNextToConfirmE}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Next to confirm E" FontSize="15" Margin="1225,467,0,229" />


                        <Border x:Name="QueueE" BorderThickness="2,2" Margin="1123,532,77,122">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingQueueE}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Confirmed in next bundle E" FontSize="15" Margin="1202,534,0,162" />


                        <Border x:Name="PilingQueueW" BorderThickness="2,2" Margin="81,398,1119,256">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingPreQueueW}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" FontSize="15" Margin="177,400,0,294" ><Run Text="Piling Pre Queue W"/></TextBlock>
                        <Border x:Name="NextToConfirmW" BorderThickness="2,2" Margin="81,465,1119,189">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInNextToConfirmW}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Next to confirm W" FontSize="15" Margin="177,467,0,229" />

                        <Border x:Name="QueueW" BorderThickness="2,2"  Margin="81,532,1119,122">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamInPilingQueueW}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Confirmed in next bundle W" FontSize="15" Margin="148,534,0,162" />


                    </Grid>

                    <Grid Margin="2,-6,-2,6">
                        <Rectangle x:Name="BedExit" Margin="0,605,0,0" HorizontalAlignment="Center" Width="1362" IsHitTestVisible="False">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.00 0.0">
                                    <GradientStop Offset="0.5" Color="Black"/>
                                    <GradientStop Offset="0.5" Color="DimGray"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Canvas Margin="0,0,0,-3">
                            <ItemsControl ItemsSource="{Binding BeamsBedExit , Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!-- Representación visual de cada Beam como botón con imagen -->
                                        <Button  Command="{Binding Path=DataContext.FooCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"   Width="600" Height="35" Background="Transparent">
                                            <Grid>
                                                <!-- Imagen de fondo -->
                                                <Image Source="{StaticResource Beam}" Width="600" Height="125"/>
                                            </Grid>
                                            <!-- Posicionamiento dentro del Canvas -->
                                            <Button.RenderTransform>
                                                <TranslateTransform X="{Binding PositionX}" Y="{Binding PositionY}" />
                                            </Button.RenderTransform>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Canvas>
                        <!-- Botones de flechas -->

                        <!-- Collecting BedExit -->
                        <Border x:Name="WestD" BorderThickness="2,2"  Margin="79,605,1121,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamNotInPilingBed5W}" Value="False">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Rectangle Fill="Transparent" IsHitTestVisible="{Binding BeamNotInPilingBed5W }"/>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 5 W" FontSize="15" Margin="191,607,0,81" />

                        <Border x:Name="West2" BorderThickness="2,2"  Margin="402,605,798,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamNotInPilingBed5W1}" Value="False">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Rectangle Fill="Transparent" IsHitTestVisible="{Binding BeamNotInPilingBed5W1}"/>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 5 W 1" FontSize="15" Margin="508,615,0,63" />


                        <!-- Collecting WestExit -->
                        <Border x:Name="EastD" BorderThickness="2,2"  Margin="1121,605,79,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamNotInPilingBed5E}" Value="False">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Rectangle Fill="Transparent" IsHitTestVisible="{Binding BeamNotInPilingBed5E}"/>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 5 E" FontSize="15" Margin="1236,607,0,81" />

                        <Border x:Name="East2" BorderThickness="2,2"  Margin="799,605,401,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BeamNotInPilingBed5W2}" Value="False">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Rectangle Fill="Transparent" IsHitTestVisible="{Binding BeamNotInPilingBed5W2}"/>
                        </Border>
                        <TextBlock Foreground="Gray" IsHitTestVisible="False" HorizontalAlignment="Left" Text="Piling Bed 5 W 2" FontSize="15" Margin="905,607,0,84" />

                    </Grid>

                    <Grid Name="Outisde">
                        <Line Stroke="White" Height="2" Stretch="Fill" X2="1" StrokeDashArray="5 5" VerticalAlignment="Top" Margin="78,715,76,0" />
                        <Line Stroke="White" Height="2" Stretch="Fill" X2="1" StrokeDashArray="5 5" VerticalAlignment="Top" Margin="78,19,76,0" />
                        <Line Stroke="White" Width="2" Stretch="Fill" Y2="1" StrokeDashArray="5 5" HorizontalAlignment="Left" Margin="78,25,0,5" />
                        <Line Stroke="White" Width="2" Stretch="Fill" Y2="1" StrokeDashArray="5 5" HorizontalAlignment="Left" Margin="1444,25,0,5" />

                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="61" Margin="55,-26,0,505">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Image.RenderTransform>
                        </Image>


                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="55,521,0,-33">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Image.RenderTransform>
                        </Image>
                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="55,106,0,373">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Image.RenderTransform>
                        </Image>

                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="55,220,0,259">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Image.RenderTransform>
                        </Image>

                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="55,305,0,174">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Image.RenderTransform>
                        </Image>

                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="1462,-26,0,505" RenderTransformOrigin="0.523,0.498"/>
                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="1462,106,0,373" RenderTransformOrigin="0.523,0.498"/>
                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="1462,220,0,259" RenderTransformOrigin="0.523,0.498"/>
                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="1462,305,0,174" RenderTransformOrigin="0.523,0.498"/>
                        <Image Source="{StaticResource DownArrow2}" HorizontalAlignment="Left" Width="58" Margin="1462,521,0,-33"/>


                    </Grid>

                    <Grid Name="Beams" Margin="0,0,0,-12">


                    </Grid>

                    <Border Name="zoomRectangle" BorderThickness="1" BorderBrush="WhiteSmoke" Margin="0,0,0,0" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top" />
                </Grid>
            </ScrollViewer>


        </DockPanel>
    </DockPanel>
</UserControl>
