<jctr:jWindowBase x:Class="TagLoader.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:TagLoader"
                  xmlns:jctr="clr-namespace:Janus.Rodeo.Windows.Library.UI.Controls;assembly=Janus.Rodeo.Windows.Library.UI.Controls"
                  xmlns:dc="clr-namespace:TagLoader.ViewModels"
                  WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResize" BorderThickness="10" Effect="{StaticResource showEffectWindow}"
                  SizeToContent="WidthAndHeight" FontStretch="Condensed" Background="Transparent"
                  WindowStartupLocation="CenterScreen">
    <jctr:jWindowBase.DataContext>
        <dc:MainViewModel />
    </jctr:jWindowBase.DataContext>
    <jctr:jWindowBase.Resources>
        <ResourceDictionary>            
            <Style x:Key="DataGridCellLeft" TargetType="DataGridCell">
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <!--<Setter Property="HorizontalAlignment" Value="Left" />
                
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Width" Value="Auto" />-->
            </Style>
        </ResourceDictionary>
    </jctr:jWindowBase.Resources>
    <Border Style="{StaticResource winBorder}">
        <Grid Style="{StaticResource grdBackgroundTransparent}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Name="grdTitle" Background="OrangeRed">
                <StackPanel Grid.Row="0" Orientation="Horizontal" Height="50" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,130,0">
                    <TextBlock Text="Tag Loader - Janus Automation" FontSize="25" FontWeight="SemiBold" Foreground="WhiteSmoke" TextAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                </StackPanel>
                <StackPanel Grid.Row="0" Orientation="Horizontal" Height="40" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Content="__" FontSize="25" FontWeight="ExtraBold" Width="50" Height="40" Margin="0,0,10,0" Style="{StaticResource btnTransparent}" 
                            Click="btnMinimize_Click"/>

                    <Button Content="X" FontSize="25" FontWeight="ExtraBold" Width="50" Height="40" Margin="0,0,10,0" Style="{StaticResource btnTransparent}" 
                            Click="btnClose_Click"/>
                </StackPanel>
            </Grid>

            <TabControl Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" Width="900">
                <TabControl.Resources>
                    <Style TargetType="TabControl">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Name="Panel">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Panel" Property="Background" Value="White" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Tags">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="200"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="5">
                            <GroupBox Header="Filters" Foreground="WhiteSmoke" FontSize="14">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                        <Label Content="Update as you type" Foreground="WhiteSmoke" FontSize="14"/>
                                        <CheckBox VerticalAlignment="Center" Foreground="WhiteSmoke" IsChecked="{Binding Path=UpdateWhileType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBox Width="320" Height="25" Text="{Binding Path=TxtFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                                        <Button Content="Get Tags" Height="25" Width="90" Margin="10,0,0,0" 
                                                Foreground="WhiteSmoke" Background="Green" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnGetTags_Click"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Label Content="{Binding Path=InfoCountTags, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="OrangeRed" FontSize="14" HorizontalContentAlignment="Right" Height="25"/>
                                        <!--<Label Content="1245" Foreground="OrangeRed" FontSize="14" Height="25"/>
                                        <Label Content=" of " Foreground="WhiteSmoke" FontSize="14" Height="25" Width="20"/>
                                        <Label Content="1000" Foreground="OrangeRed" FontSize="14" Height="25"/>-->
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Actions" Foreground="WhiteSmoke" FontSize="14">
                                <StackPanel Orientation="Horizontal">
                                    <Button Height="50" Width="80" Margin="2,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Green" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnCraneSimulator_Click">
                                        <Button.Content>
                                            <TextBlock Text="Crane Simulator" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Height="50" Width="80" Margin="2,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Coral" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnLocationSimulator_Click">
                                        <Button.Content>
                                            <TextBlock Text="Location Simulator" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Height="50" Width="80" Margin="2,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Blue" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnHookSimulator_Click">
                                        <Button.Content>
                                            <TextBlock Text="Hook Simulator" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Height="50" Width="80" Margin="2,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnEnableAll_Click">
                                        <Button.Content>
                                            <TextBlock Text="Enable All" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Height="50" Width="80" Margin="2,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="Black" Background="YellowGreen" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnEmergencyLoad">
                                        <Button.Content>
                                            <TextBlock Text="Emergency Load" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" Margin="5">
                            <GroupBox Header="Set data to Update" Foreground="WhiteSmoke" FontSize="14" Height="190">
                                <StackPanel Orientation="Vertical">
                                    <Label Content="Selected Tag:" Foreground="WhiteSmoke" FontSize="14" FontStyle="Italic"/>
                                    <Label Content="{Binding Path=CurrentTag.TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="WhiteSmoke" FontSize="16" Height="45"/>
                                    <Label Content="Set this values:" Foreground="WhiteSmoke" FontSize="14" FontStyle="Italic"/>
                                    <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                        <StackPanel Orientation="Vertical" Margin="0,0,5,0" VerticalAlignment="Center">
                                            <TextBox Width="145" Height="25" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                     Text="{Binding Path=NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <CheckBox VerticalAlignment="Center" Content="Set value as TEXT" Foreground="WhiteSmoke" Margin="0,5,0,0"
                                                      IsChecked="{Binding Path=ValueAsText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                        <Button Height="50" Width="80" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnUpdate_Click">
                                            <Button.Content>
                                                <TextBlock Text="Update L2 Values" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="50" Width="80" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnUpdateAll_Click">
                                            <Button.Content>
                                                <TextBlock Text="Update All L2 Values" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="50" Width="80" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnSendCommand_Click">
                                            <Button.Content>
                                                <TextBlock Text="Send Command" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
                            <DataGrid x:Name="grdItems" Background="Transparent" FontSize="12" Margin="0,5" Height="550" AutoGenerateColumns="False" CanUserSortColumns="True" AlternationCount="2"
                                      ItemsSource="{Binding Path=LstFilterTags, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserResizeColumns="True"
                                      SelectedItem="{Binding Path=CurrentTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path=TagName, Mode=OneWay}" Width="*" Header="Tag" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=TagValue, Mode=OneWay}" Width="200" Header="TagValue" FontSize="14" />
                                </DataGrid.Columns>
                            </DataGrid>

                        </StackPanel>
                    </Grid>


                </TabItem>

                <TabItem Header="Alarms">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="220"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="5">
                            <GroupBox Header="Filters" Foreground="WhiteSmoke" FontSize="14">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                        <Label Content="Update as you type" Foreground="WhiteSmoke" FontSize="14"/>
                                        <CheckBox VerticalAlignment="Center" Foreground="WhiteSmoke" IsChecked="{Binding Path=UpdateWhileTypeAlarm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBox Width="320" Height="25" Text="{Binding Path=TxtFilterAlarm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                                        <Button Content="Get Alarms" Height="25" Width="90" Margin="10,0,0,0" 
                                                Foreground="WhiteSmoke" Background="Green" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnGetAlarms_Click"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Label Content="{Binding Path=InfoCountAlarms, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="OrangeRed" FontSize="14" HorizontalContentAlignment="Right" Height="25"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Actions" Foreground="WhiteSmoke" FontSize="14" Margin="0,15,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <Button Height="50" Width="90" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Orange" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnLoadL2Alarms_Click">
                                        <Button.Content>
                                            <TextBlock Text="Load L2 Alarms" TextWrapping="Wrap" TextAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" Margin="5">
                            <GroupBox Header="Set data to Update" Foreground="WhiteSmoke" FontSize="14">
                                <StackPanel Orientation="Vertical">
                                    <Label Content="Selected Tag:" Foreground="WhiteSmoke" FontSize="14" FontStyle="Italic"/>
                                    <Label Content="{Binding Path=CurrentAlarm.AlarmName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="WhiteSmoke" FontSize="16" Height="45"/>
                                    <Label Content="Set this values:" Foreground="WhiteSmoke" FontSize="14" FontStyle="Italic"/>

                                    <StackPanel Orientation="Vertical" Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                        <ComboBox Width="340" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                      ItemsSource="{Binding Path=LstStatusAlarms, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                      SelectedItem="{Binding Path=CurrentStatusAlarm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      DisplayMemberPath="Name" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Height="40" Width="100" Margin="5,10,10,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnUpdateAlarm_Click">
                                            <Button.Content>
                                                <TextBlock Text="Update" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="40" Width="100" Margin="10,10,10,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnDeactive_Click">
                                            <Button.Content>
                                                <TextBlock Text="Deactive Current" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="40" Width="100" Margin="10,10,10,5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Foreground="WhiteSmoke" Background="Gray" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                                Click="btnActive_Click">
                                            <Button.Content>
                                                <TextBlock Text="Active Current" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
                            <DataGrid x:Name="grdAlarmItems" Background="Transparent" FontSize="12" Margin="0,5" Height="550" AutoGenerateColumns="False" CanUserSortColumns="True" AlternationCount="2"
                                      ItemsSource="{Binding Path=LstFilterAlarms, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserResizeColumns="True"
                                      SelectedItem="{Binding Path=CurrentAlarm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path=AlarmID, Mode=OneWay}" Width="50" Header="Id" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=AlarmName, Mode=OneWay}" Width="*" Header="Name" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=AlarmState, Mode=OneWay}" Width="120" Header="State" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=Update, Mode=OneWay}" Width="130" Header="Update" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=TimeOn, Mode=OneWay}" Width="130" Header="TimeOn" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=TimeOff, Mode=OneWay}" Width="130" Header="TimeOff" FontSize="14" />
                                </DataGrid.Columns>
                            </DataGrid>

                        </StackPanel>
                    </Grid>


                </TabItem>

                <TabItem Header="Users">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Vertical" Margin="5">
                            <GroupBox Header="Session" Foreground="WhiteSmoke" FontSize="14">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="5">
                                        <Label Content="Client Type:" Width="100" Foreground="WhiteSmoke" FontSize="14"/>
                                        <ComboBox Width="160" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                  ItemsSource="{Binding Path=LstClientTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding Path=CurrentClientType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="Name" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="5">
                                        <Label Content="Client:" Width="100" Foreground="WhiteSmoke" FontSize="14"/>
                                        <!--<TextBox Width="160" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                 Text="{Binding Path=Client, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Height="25"/>-->
                                        <ComboBox Width="160" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                  ItemsSource="{Binding Path=LstClients, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedItem="{Binding Path=CurrentClient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="Name" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Margin="5">
                                        <Label Content="User:" Width="100" Foreground="WhiteSmoke" FontSize="14"/>
                                        <TextBox Width="160" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                 Text="{Binding Path=UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Height="25"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" Margin="5">
                                        <Label Content="Password:" Width="100" Foreground="WhiteSmoke" FontSize="14"/>
                                        <TextBox Width="160" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                 Text="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14" Height="25"/>
                                    </StackPanel>

                                    <StackPanel Grid.Row="0" Grid.Column="4" Grid.RowSpan="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="109,0,0,0">
                                        <Button Height="65" Width="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Orange" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnLogin_Click">
                                            <Button.Content>
                                                <TextBlock Text="Login" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <Button Height="65" Width="90" Margin="20,0,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Orange" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnLogout_Click">
                                            <Button.Content>
                                                <TextBlock Text="Logout" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,5,0" HorizontalAlignment="Right">
                            <Button Height="40" Width="120" Margin="20,0,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            Foreground="WhiteSmoke" Background="Green" FontSize="14" FontWeight="Bold" BorderBrush="WhiteSmoke" BorderThickness="2"
                                            Click="btnGetAllSessions_Click">
                                <Button.Content>
                                    <TextBlock Text="Get All Sessions" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        
                        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
                            <DataGrid x:Name="grdUsers" Background="Transparent" FontSize="12" Margin="0,5" Height="550" AutoGenerateColumns="False" CanUserSortColumns="True" AlternationCount="2"
                                      ItemsSource="{Binding Path=LstUsers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserResizeColumns="True"
                                      SelectedItem="{Binding Path=CurrentUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path=Client.Rodeo_Client_Type.Name, Mode=OneWay}" Width="300" Header="ClientType" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=Client.Name, Mode=OneWay}" Width="300" Header="Client" FontSize="14" />
                                    <DataGridTextColumn Binding="{Binding Path=UserName, Mode=OneWay}" Width="*" Header="UserName" FontSize="14" />
                                </DataGrid.Columns>
                            </DataGrid>

                        </StackPanel>
                    </Grid>


                </TabItem>
            </TabControl>

            <!--<DataGrid Height="190" Background="Transparent" AutoGenerateColumns="False" CanUserResizeColumns="True"
                    	  ItemsSource="{Binding Path=Messages, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectionMode="Single" SelectionUnit="FullRow" RowDetailsVisibilityMode="Collapsed"
                    	  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding EventDateTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:yyyy-MM-dd hh:mm:ss.fff tt}}" MinWidth="200" Width="260" Header="TimeStamp"  />
                        <DataGridTextColumn Binding="{Binding Message, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="320" Width="540" Header="Messages"/>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource defaultRowStyle}">
                            <Setter Property="MinHeight" Value="35"/>
                            <Setter Property="BorderThickness" Value="0.2" />
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>-->


            <!--<StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

                <Button Content="Start" FontSize="16" Foreground="WhiteSmoke" Width="150" Height="40" Style="{StaticResource btnTransparent}"
                        Command="{Binding Path=StartCommand}" Margin="0,0,20,0"/>

                <Button Content="Stop" FontSize="16" Foreground="WhiteSmoke" Width="150" Height="40" Style="{StaticResource btnTransparent}"
                        Command="{Binding Path=StopCommand}" Margin="0,0,20,0"/>

                <Button Content="Clear" FontSize="16" Foreground="WhiteSmoke" Width="150" Height="40" Style="{StaticResource btnTransparent}"
                        Command="{Binding Path=ClearCommand}" Margin="0,0,0,0"/>
            </StackPanel>-->
        </Grid>
    </Border>
</jctr:jWindowBase>
